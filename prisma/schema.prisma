generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  NotPaid
  Paid
}

model Product {
  id          String      @id @default(uuid())
  name        String
  price       Int
  image       String
  category    String
  description String
  orderItems  OrderItem[]
}

model OrderItem {
  id        String  @id @default(cuid())
  product   Product @relation(fields: [productId], references: [id])
  productId String
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
  quantity  Int
}

model Order {
  id         String      @id @default(cuid())
  createdAt  DateTime    @default(now())
  fullName   String
  address    String
  city       String
  total      Int
  orderItems OrderItem[]
  user       User        @relation(fields: [userId], references: [id])
  userId     String
  status     Status      @default(NotPaid)
  updatedAt  DateTime?
}

// next-auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id       String    @id @default(cuid())
  name     String
  email    String    @unique
  password String
  accounts Account[]
  sessions Session[]
  orders   Order[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
